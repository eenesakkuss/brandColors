{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enes\\\\Desktop\\\\react tutorial\\\\brand-colors\\\\src\\\\Components\\\\Brand.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { getContrastYIQ } from '../helpers';\nimport MainContex from './MainContext';\nimport ClipboardButton from 'react-clipboard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Brand(_ref) {\n  _s();\n  let {\n    brand\n  } = _ref;\n  const {\n    selectedBrands,\n    setSelectedBrands\n  } = useContext(MainContex);\n  const toggleSelected = () => {\n    if (selectedBrands.includes(brand.slug)) {\n      setSelectedBrands(selectedBrands.filter(slug => slug !== brand.slug));\n    } else {\n      setSelectedBrands([...selectedBrands, brand.slug]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `brand ${selectedBrands.includes(brand.slug) ? 'selected' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      onClick: toggleSelected,\n      children: brand.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-colors\",\n      children: brand.colors.map((color, index) => /*#__PURE__*/_jsxDEV(ClipboardButton, {\n        component: \"span\",\n        style: {\n          \"--bgColor\": `#${color}`,\n          \"--textColor\": `${getContrastYIQ(color)}`\n        },\n        children: color\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Brand, \"JuL1HFZxXID1B/iAhrae6brtZBk=\");\n_c = Brand;\nvar _c;\n$RefreshReg$(_c, \"Brand\");","map":{"version":3,"names":["useContext","getContrastYIQ","MainContex","ClipboardButton","jsxDEV","_jsxDEV","Brand","_ref","_s","brand","selectedBrands","setSelectedBrands","toggleSelected","includes","slug","filter","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","colors","map","color","index","component","style","_c","$RefreshReg$"],"sources":["C:/Users/Enes/Desktop/react tutorial/brand-colors/src/Components/Brand.js"],"sourcesContent":["import { useContext } from 'react'\r\nimport {getContrastYIQ} from '../helpers'\r\nimport MainContex from './MainContext'\r\nimport ClipboardButton from 'react-clipboard.js'\r\n\r\nexport default function Brand ({brand}) {\r\n\r\n    const {selectedBrands,setSelectedBrands} = useContext(MainContex)\r\n\r\n    const toggleSelected = () =>{\r\n        if(selectedBrands.includes(brand.slug)){\r\n            setSelectedBrands(selectedBrands.filter(slug => slug !== brand.slug))\r\n        }else{\r\n            setSelectedBrands([...selectedBrands,brand.slug])\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className={`brand ${selectedBrands.includes(brand.slug) ? 'selected' : ''}`}> \r\n            <h5 onClick={toggleSelected}>{brand.title}</h5>\r\n            <div className=\"brand-colors\">\r\n                {\r\n                    brand.colors.map((color,index) =>(\r\n                        <ClipboardButton component=\"span\" style={{\"--bgColor\": `#${color}`, \"--textColor\" : `${getContrastYIQ(color)}`}} key={index}>\r\n                            {color}\r\n                        </ClipboardButton>\r\n                       \r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAAQC,cAAc,QAAO,YAAY;AACzC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,eAAe,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAT;IAACC;EAAK,CAAC,GAAAF,IAAA;EAElC,MAAM;IAACG,cAAc;IAACC;EAAiB,CAAC,GAAGX,UAAU,CAACE,UAAU,CAAC;EAEjE,MAAMU,cAAc,GAAGA,CAAA,KAAK;IACxB,IAAGF,cAAc,CAACG,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,EAAC;MACnCH,iBAAiB,CAACD,cAAc,CAACK,MAAM,CAACD,IAAI,IAAIA,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC,CAAC;IACzE,CAAC,MAAI;MACDH,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAACD,KAAK,CAACK,IAAI,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAKW,SAAS,EAAG,SAAQN,cAAc,CAACG,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,GAAG,UAAU,GAAG,EAAG,EAAE;IAAAG,QAAA,gBAC7EZ,OAAA;MAAIa,OAAO,EAAEN,cAAe;MAAAK,QAAA,EAAER,KAAK,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/ClB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,EAErBR,KAAK,CAACe,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,kBACzBtB,OAAA,CAACF,eAAe;QAACyB,SAAS,EAAC,MAAM;QAACC,KAAK,EAAE;UAAC,WAAW,EAAG,IAAGH,KAAM,EAAC;UAAE,aAAa,EAAI,GAAEzB,cAAc,CAACyB,KAAK,CAAE;QAAC,CAAE;QAAAT,QAAA,EAC3GS;MAAK,GAD4GC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAI9H;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAACf,EAAA,CA3BuBF,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}